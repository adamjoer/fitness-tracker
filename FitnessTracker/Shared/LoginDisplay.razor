@using Microsoft.AspNetCore.Identity
@using FitnessTracker.Data
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject UserManager<FitnessTrackerUser> UserManager;
<CascadingAuthenticationState>
    <AuthorizeView>
        <Authorized>
            <a href="Identity/Account/Manage">Hello, @FullName!</a>
            <form method="post" action="Identity/Account/LogOut">
                <button type="submit" class="nav-link btn btn-link">Log out</button>
            </form>
        </Authorized>
        <NotAuthorized>
            <a href="Identity/Account/Register">Register</a>
            <a href="Identity/Account/Login">Log in</a>
        </NotAuthorized>
    </AuthorizeView>
</CascadingAuthenticationState>

@code {

    private string FullName { get; set; } = string.Empty;

    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();

        if (authState.User.Identity is {IsAuthenticated: true })
        {
            var user = await UserManager.FindByNameAsync(authState.User.Identity?.Name);
            FullName = $"{user.FirstName} {user.LastName}";
        }
    }

}
