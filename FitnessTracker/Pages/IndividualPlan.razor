@page "/plans/{id}"
@attribute [Authorize]

<PageTitle>Fitness Plan | FitnessTracker</PageTitle>

@using FitnessTracker.Data
@inject FitnessPlanService FitnessPlanService;

<h1>Fitness Plan</h1>

@if (NotFound)
{
    <PageTitle>Not Found | FitnessTracker</PageTitle>
    <p role="alert">This fitness plan does not exist</p>
}
else if (FitnessPlan == null)
{
    <p>Loading...</p>
}
else
{
    <PageTitle>@FitnessPlan.Title | FitnessTracker</PageTitle>
    <FitnessPlanDisplay FitnessPlan="FitnessPlan"/>
}

@code {

    [Parameter]
    public string? Id { get; set; }

    private bool NotFound { get; set; }

    private FitnessPlan? FitnessPlan { get; set; }

    private async Task LoadFitnessPlan()
    {
        if (Id == null)
        {
            NotFound = true;
            return;
        }

        var fitnessPlan = await FitnessPlanService.GetFitnessPlan(Id);
        if (fitnessPlan == null)
        {
            NotFound = true;
            return;
        }

        FitnessPlan = fitnessPlan;
    }

    protected override async Task OnParametersSetAsync()
    {
        await LoadFitnessPlan();
    }

}
